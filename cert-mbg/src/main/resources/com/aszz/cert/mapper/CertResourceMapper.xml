<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aszz.cert.mapper.CertResourceMapper">
  <resultMap id="BaseResultMap" type="com.aszz.cert.model.CertResource">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="resource_display_name" jdbcType="VARCHAR" property="resourceDisplayName" />
    <result column="resource_path" jdbcType="VARCHAR" property="resourcePath" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
    <result column="resource_status" jdbcType="INTEGER" property="resourceStatus" />
    <result column="resource_desc" jdbcType="VARCHAR" property="resourceDesc" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_id, resource_name, resource_display_name, resource_path, resource_type, 
    resource_status, resource_desc, update_user_id, create_user_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.aszz.cert.model.CertResourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cert_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cert_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cert_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aszz.cert.model.CertResourceExample">
    delete from cert_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aszz.cert.model.CertResource">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cert_resource (parent_id, resource_name, resource_display_name, 
      resource_path, resource_type, resource_status, 
      resource_desc, update_user_id, create_user_id, 
      create_time, update_time)
    values (#{parentId,jdbcType=BIGINT}, #{resourceName,jdbcType=VARCHAR}, #{resourceDisplayName,jdbcType=VARCHAR}, 
      #{resourcePath,jdbcType=VARCHAR}, #{resourceType,jdbcType=INTEGER}, #{resourceStatus,jdbcType=INTEGER}, 
      #{resourceDesc,jdbcType=VARCHAR}, #{updateUserId,jdbcType=BIGINT}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aszz.cert.model.CertResource">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cert_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="resourceName != null">
        resource_name,
      </if>
      <if test="resourceDisplayName != null">
        resource_display_name,
      </if>
      <if test="resourcePath != null">
        resource_path,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="resourceStatus != null">
        resource_status,
      </if>
      <if test="resourceDesc != null">
        resource_desc,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="resourceName != null">
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceDisplayName != null">
        #{resourceDisplayName,jdbcType=VARCHAR},
      </if>
      <if test="resourcePath != null">
        #{resourcePath,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="resourceStatus != null">
        #{resourceStatus,jdbcType=INTEGER},
      </if>
      <if test="resourceDesc != null">
        #{resourceDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aszz.cert.model.CertResourceExample" resultType="java.lang.Long">
    select count(*) from cert_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cert_resource
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.resourceName != null">
        resource_name = #{record.resourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceDisplayName != null">
        resource_display_name = #{record.resourceDisplayName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourcePath != null">
        resource_path = #{record.resourcePath,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=INTEGER},
      </if>
      <if test="record.resourceStatus != null">
        resource_status = #{record.resourceStatus,jdbcType=INTEGER},
      </if>
      <if test="record.resourceDesc != null">
        resource_desc = #{record.resourceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cert_resource
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      resource_display_name = #{record.resourceDisplayName,jdbcType=VARCHAR},
      resource_path = #{record.resourcePath,jdbcType=VARCHAR},
      resource_type = #{record.resourceType,jdbcType=INTEGER},
      resource_status = #{record.resourceStatus,jdbcType=INTEGER},
      resource_desc = #{record.resourceDesc,jdbcType=VARCHAR},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aszz.cert.model.CertResource">
    update cert_resource
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceDisplayName != null">
        resource_display_name = #{resourceDisplayName,jdbcType=VARCHAR},
      </if>
      <if test="resourcePath != null">
        resource_path = #{resourcePath,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
      <if test="resourceStatus != null">
        resource_status = #{resourceStatus,jdbcType=INTEGER},
      </if>
      <if test="resourceDesc != null">
        resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aszz.cert.model.CertResource">
    update cert_resource
    set parent_id = #{parentId,jdbcType=BIGINT},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_display_name = #{resourceDisplayName,jdbcType=VARCHAR},
      resource_path = #{resourcePath,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=INTEGER},
      resource_status = #{resourceStatus,jdbcType=INTEGER},
      resource_desc = #{resourceDesc,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>