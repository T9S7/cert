<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aszz.cert.mapper.CertificateMapper">
  <resultMap id="BaseResultMap" type="com.aszz.cert.model.Certificate">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="cert_path" jdbcType="VARCHAR" property="certPath" />
    <result column="cert_status" jdbcType="INTEGER" property="certStatus" />
    <result column="cert_type" jdbcType="INTEGER" property="certType" />
    <result column="cert_mqtt_client_id" jdbcType="VARCHAR" property="certMqttClientId" />
    <result column="cert_dev_id" jdbcType="VARCHAR" property="certDevId" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="cert_exp_time" jdbcType="TIMESTAMP" property="certExpTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, cert_path, cert_status, cert_type, cert_mqtt_client_id, cert_dev_id, 
    create_user_id, update_user_id, cert_exp_time, create_time, update_time, reserve1, 
    reserve2
  </sql>
  <select id="selectByExample" parameterType="com.aszz.cert.model.CertificateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from certificate
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from certificate
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aszz.cert.model.CertificateExample">
    delete from certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aszz.cert.model.Certificate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into certificate (project_id, cert_path, cert_status, 
      cert_type, cert_mqtt_client_id, cert_dev_id, 
      create_user_id, update_user_id, cert_exp_time, 
      create_time, update_time, reserve1, 
      reserve2)
    values (#{projectId,jdbcType=INTEGER}, #{certPath,jdbcType=VARCHAR}, #{certStatus,jdbcType=INTEGER}, 
      #{certType,jdbcType=INTEGER}, #{certMqttClientId,jdbcType=VARCHAR}, #{certDevId,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, #{certExpTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aszz.cert.model.Certificate">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into certificate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="certPath != null">
        cert_path,
      </if>
      <if test="certStatus != null">
        cert_status,
      </if>
      <if test="certType != null">
        cert_type,
      </if>
      <if test="certMqttClientId != null">
        cert_mqtt_client_id,
      </if>
      <if test="certDevId != null">
        cert_dev_id,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="certExpTime != null">
        cert_exp_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="certPath != null">
        #{certPath,jdbcType=VARCHAR},
      </if>
      <if test="certStatus != null">
        #{certStatus,jdbcType=INTEGER},
      </if>
      <if test="certType != null">
        #{certType,jdbcType=INTEGER},
      </if>
      <if test="certMqttClientId != null">
        #{certMqttClientId,jdbcType=VARCHAR},
      </if>
      <if test="certDevId != null">
        #{certDevId,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="certExpTime != null">
        #{certExpTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aszz.cert.model.CertificateExample" resultType="java.lang.Long">
    select count(*) from certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update certificate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.certPath != null">
        cert_path = #{record.certPath,jdbcType=VARCHAR},
      </if>
      <if test="record.certStatus != null">
        cert_status = #{record.certStatus,jdbcType=INTEGER},
      </if>
      <if test="record.certType != null">
        cert_type = #{record.certType,jdbcType=INTEGER},
      </if>
      <if test="record.certMqttClientId != null">
        cert_mqtt_client_id = #{record.certMqttClientId,jdbcType=VARCHAR},
      </if>
      <if test="record.certDevId != null">
        cert_dev_id = #{record.certDevId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.certExpTime != null">
        cert_exp_time = #{record.certExpTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update certificate
    set id = #{record.id,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=INTEGER},
      cert_path = #{record.certPath,jdbcType=VARCHAR},
      cert_status = #{record.certStatus,jdbcType=INTEGER},
      cert_type = #{record.certType,jdbcType=INTEGER},
      cert_mqtt_client_id = #{record.certMqttClientId,jdbcType=VARCHAR},
      cert_dev_id = #{record.certDevId,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      cert_exp_time = #{record.certExpTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aszz.cert.model.Certificate">
    update certificate
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="certPath != null">
        cert_path = #{certPath,jdbcType=VARCHAR},
      </if>
      <if test="certStatus != null">
        cert_status = #{certStatus,jdbcType=INTEGER},
      </if>
      <if test="certType != null">
        cert_type = #{certType,jdbcType=INTEGER},
      </if>
      <if test="certMqttClientId != null">
        cert_mqtt_client_id = #{certMqttClientId,jdbcType=VARCHAR},
      </if>
      <if test="certDevId != null">
        cert_dev_id = #{certDevId,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="certExpTime != null">
        cert_exp_time = #{certExpTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aszz.cert.model.Certificate">
    update certificate
    set project_id = #{projectId,jdbcType=INTEGER},
      cert_path = #{certPath,jdbcType=VARCHAR},
      cert_status = #{certStatus,jdbcType=INTEGER},
      cert_type = #{certType,jdbcType=INTEGER},
      cert_mqtt_client_id = #{certMqttClientId,jdbcType=VARCHAR},
      cert_dev_id = #{certDevId,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      cert_exp_time = #{certExpTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>