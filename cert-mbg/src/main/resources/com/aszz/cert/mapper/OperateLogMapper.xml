<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aszz.cert.mapper.OperateLogMapper">
  <resultMap id="BaseResultMap" type="com.aszz.cert.model.OperateLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="op_desc" jdbcType="VARCHAR" property="opDesc" />
    <result column="op_user" jdbcType="VARCHAR" property="opUser" />
    <result column="op_start_time" jdbcType="BIGINT" property="opStartTime" />
    <result column="op_spend_time" jdbcType="BIGINT" property="opSpendTime" />
    <result column="op_base_path" jdbcType="VARCHAR" property="opBasePath" />
    <result column="op_uri" jdbcType="VARCHAR" property="opUri" />
    <result column="op_url" jdbcType="VARCHAR" property="opUrl" />
    <result column="op_ip" jdbcType="VARCHAR" property="opIp" />
    <result column="op_method" jdbcType="VARCHAR" property="opMethod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, op_desc, op_user, op_start_time, op_spend_time, op_base_path, op_uri, op_url, 
    op_ip, op_method
  </sql>
  <select id="selectByExample" parameterType="com.aszz.cert.model.OperateLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operate_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from operate_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aszz.cert.model.OperateLogExample">
    delete from operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aszz.cert.model.OperateLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into operate_log (op_desc, op_user, op_start_time, 
      op_spend_time, op_base_path, op_uri, 
      op_url, op_ip, op_method
      )
    values (#{opDesc,jdbcType=VARCHAR}, #{opUser,jdbcType=VARCHAR}, #{opStartTime,jdbcType=BIGINT}, 
      #{opSpendTime,jdbcType=BIGINT}, #{opBasePath,jdbcType=VARCHAR}, #{opUri,jdbcType=VARCHAR}, 
      #{opUrl,jdbcType=VARCHAR}, #{opIp,jdbcType=VARCHAR}, #{opMethod,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aszz.cert.model.OperateLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into operate_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="opDesc != null">
        op_desc,
      </if>
      <if test="opUser != null">
        op_user,
      </if>
      <if test="opStartTime != null">
        op_start_time,
      </if>
      <if test="opSpendTime != null">
        op_spend_time,
      </if>
      <if test="opBasePath != null">
        op_base_path,
      </if>
      <if test="opUri != null">
        op_uri,
      </if>
      <if test="opUrl != null">
        op_url,
      </if>
      <if test="opIp != null">
        op_ip,
      </if>
      <if test="opMethod != null">
        op_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="opDesc != null">
        #{opDesc,jdbcType=VARCHAR},
      </if>
      <if test="opUser != null">
        #{opUser,jdbcType=VARCHAR},
      </if>
      <if test="opStartTime != null">
        #{opStartTime,jdbcType=BIGINT},
      </if>
      <if test="opSpendTime != null">
        #{opSpendTime,jdbcType=BIGINT},
      </if>
      <if test="opBasePath != null">
        #{opBasePath,jdbcType=VARCHAR},
      </if>
      <if test="opUri != null">
        #{opUri,jdbcType=VARCHAR},
      </if>
      <if test="opUrl != null">
        #{opUrl,jdbcType=VARCHAR},
      </if>
      <if test="opIp != null">
        #{opIp,jdbcType=VARCHAR},
      </if>
      <if test="opMethod != null">
        #{opMethod,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aszz.cert.model.OperateLogExample" resultType="java.lang.Long">
    select count(*) from operate_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operate_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.opDesc != null">
        op_desc = #{record.opDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.opUser != null">
        op_user = #{record.opUser,jdbcType=VARCHAR},
      </if>
      <if test="record.opStartTime != null">
        op_start_time = #{record.opStartTime,jdbcType=BIGINT},
      </if>
      <if test="record.opSpendTime != null">
        op_spend_time = #{record.opSpendTime,jdbcType=BIGINT},
      </if>
      <if test="record.opBasePath != null">
        op_base_path = #{record.opBasePath,jdbcType=VARCHAR},
      </if>
      <if test="record.opUri != null">
        op_uri = #{record.opUri,jdbcType=VARCHAR},
      </if>
      <if test="record.opUrl != null">
        op_url = #{record.opUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.opIp != null">
        op_ip = #{record.opIp,jdbcType=VARCHAR},
      </if>
      <if test="record.opMethod != null">
        op_method = #{record.opMethod,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operate_log
    set id = #{record.id,jdbcType=BIGINT},
      op_desc = #{record.opDesc,jdbcType=VARCHAR},
      op_user = #{record.opUser,jdbcType=VARCHAR},
      op_start_time = #{record.opStartTime,jdbcType=BIGINT},
      op_spend_time = #{record.opSpendTime,jdbcType=BIGINT},
      op_base_path = #{record.opBasePath,jdbcType=VARCHAR},
      op_uri = #{record.opUri,jdbcType=VARCHAR},
      op_url = #{record.opUrl,jdbcType=VARCHAR},
      op_ip = #{record.opIp,jdbcType=VARCHAR},
      op_method = #{record.opMethod,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aszz.cert.model.OperateLog">
    update operate_log
    <set>
      <if test="opDesc != null">
        op_desc = #{opDesc,jdbcType=VARCHAR},
      </if>
      <if test="opUser != null">
        op_user = #{opUser,jdbcType=VARCHAR},
      </if>
      <if test="opStartTime != null">
        op_start_time = #{opStartTime,jdbcType=BIGINT},
      </if>
      <if test="opSpendTime != null">
        op_spend_time = #{opSpendTime,jdbcType=BIGINT},
      </if>
      <if test="opBasePath != null">
        op_base_path = #{opBasePath,jdbcType=VARCHAR},
      </if>
      <if test="opUri != null">
        op_uri = #{opUri,jdbcType=VARCHAR},
      </if>
      <if test="opUrl != null">
        op_url = #{opUrl,jdbcType=VARCHAR},
      </if>
      <if test="opIp != null">
        op_ip = #{opIp,jdbcType=VARCHAR},
      </if>
      <if test="opMethod != null">
        op_method = #{opMethod,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aszz.cert.model.OperateLog">
    update operate_log
    set op_desc = #{opDesc,jdbcType=VARCHAR},
      op_user = #{opUser,jdbcType=VARCHAR},
      op_start_time = #{opStartTime,jdbcType=BIGINT},
      op_spend_time = #{opSpendTime,jdbcType=BIGINT},
      op_base_path = #{opBasePath,jdbcType=VARCHAR},
      op_uri = #{opUri,jdbcType=VARCHAR},
      op_url = #{opUrl,jdbcType=VARCHAR},
      op_ip = #{opIp,jdbcType=VARCHAR},
      op_method = #{opMethod,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>