<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aszz.cert.mapper.CertRuleMapper">
  <resultMap id="BaseResultMap" type="com.aszz.cert.model.CertRule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cert_rule_name" jdbcType="VARCHAR" property="certRuleName" />
    <result column="cert_rule_desc" jdbcType="VARCHAR" property="certRuleDesc" />
    <result column="cert_rule_status" jdbcType="INTEGER" property="certRuleStatus" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.aszz.cert.model.CertRule">
    <result column="cert_rule_content" jdbcType="LONGVARCHAR" property="certRuleContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cert_rule_name, cert_rule_desc, cert_rule_status, update_user_id, create_user_id, 
    create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    cert_rule_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.aszz.cert.model.CertRuleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cert_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.aszz.cert.model.CertRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cert_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cert_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cert_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aszz.cert.model.CertRuleExample">
    delete from cert_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aszz.cert.model.CertRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cert_rule (cert_rule_name, cert_rule_desc, cert_rule_status, 
      update_user_id, create_user_id, create_time, 
      update_time, cert_rule_content)
    values (#{certRuleName,jdbcType=VARCHAR}, #{certRuleDesc,jdbcType=VARCHAR}, #{certRuleStatus,jdbcType=INTEGER}, 
      #{updateUserId,jdbcType=BIGINT}, #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{certRuleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aszz.cert.model.CertRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cert_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="certRuleName != null">
        cert_rule_name,
      </if>
      <if test="certRuleDesc != null">
        cert_rule_desc,
      </if>
      <if test="certRuleStatus != null">
        cert_rule_status,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="certRuleContent != null">
        cert_rule_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="certRuleName != null">
        #{certRuleName,jdbcType=VARCHAR},
      </if>
      <if test="certRuleDesc != null">
        #{certRuleDesc,jdbcType=VARCHAR},
      </if>
      <if test="certRuleStatus != null">
        #{certRuleStatus,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certRuleContent != null">
        #{certRuleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aszz.cert.model.CertRuleExample" resultType="java.lang.Long">
    select count(*) from cert_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cert_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.certRuleName != null">
        cert_rule_name = #{record.certRuleName,jdbcType=VARCHAR},
      </if>
      <if test="record.certRuleDesc != null">
        cert_rule_desc = #{record.certRuleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.certRuleStatus != null">
        cert_rule_status = #{record.certRuleStatus,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.certRuleContent != null">
        cert_rule_content = #{record.certRuleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cert_rule
    set id = #{record.id,jdbcType=BIGINT},
      cert_rule_name = #{record.certRuleName,jdbcType=VARCHAR},
      cert_rule_desc = #{record.certRuleDesc,jdbcType=VARCHAR},
      cert_rule_status = #{record.certRuleStatus,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      cert_rule_content = #{record.certRuleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cert_rule
    set id = #{record.id,jdbcType=BIGINT},
      cert_rule_name = #{record.certRuleName,jdbcType=VARCHAR},
      cert_rule_desc = #{record.certRuleDesc,jdbcType=VARCHAR},
      cert_rule_status = #{record.certRuleStatus,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aszz.cert.model.CertRule">
    update cert_rule
    <set>
      <if test="certRuleName != null">
        cert_rule_name = #{certRuleName,jdbcType=VARCHAR},
      </if>
      <if test="certRuleDesc != null">
        cert_rule_desc = #{certRuleDesc,jdbcType=VARCHAR},
      </if>
      <if test="certRuleStatus != null">
        cert_rule_status = #{certRuleStatus,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certRuleContent != null">
        cert_rule_content = #{certRuleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aszz.cert.model.CertRule">
    update cert_rule
    set cert_rule_name = #{certRuleName,jdbcType=VARCHAR},
      cert_rule_desc = #{certRuleDesc,jdbcType=VARCHAR},
      cert_rule_status = #{certRuleStatus,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      cert_rule_content = #{certRuleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aszz.cert.model.CertRule">
    update cert_rule
    set cert_rule_name = #{certRuleName,jdbcType=VARCHAR},
      cert_rule_desc = #{certRuleDesc,jdbcType=VARCHAR},
      cert_rule_status = #{certRuleStatus,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>