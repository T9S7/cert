spring:
  #数据库时间格式化
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  profiles:
    active: dev #默认为开发环境
  servlet:
    multipart:
      enabled: true #开启文件上传
      max-file-size: 10MB #限制文件上传大小为10M
  redis:
    host: ENC(K6iF2Zlhde2n6OB4a89pu0mMo5fBTxDX) # Redis服务器地址
#    host: 47.114.72.214 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 40140 # Redis服务器连接端口
#    port: 6379 # Redis服务器连接端口
    password: ENC(90dXsKSMvo3qplzO6doshB23+H6QfL4J) # Redis服务器连接密码（默认为空）
#    password: aszz2020 # Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）

# 自定义redis key
redis:
    key:
      prefix:
        jwtToken: "cert:jwtToken:"
      expire:
        jwtToken: 3600 # 验证码超期时间(秒)

mybatis:
  mapper-locations:
    - classpath:dao/*.xml
    - classpath*:com/**/mapper/*.xml

jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: cert-admin-secret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
#  expiration: 0 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开头


secure:
  ignored:
    urls: #安全路径白名单
      - /swagger-ui.html
      - /swagger-ui.html/**
      - /swagger-resources/**
      - /swagger/**
      - /**/v2/api-docs
      - /**/*.js
      - /**/*.css
      - /**/*.png
      - /**/*.ico
      - /webjars/springfox-swagger-ui/**
      - /actuator/**
      - /druid/**
      - /minio/upload
      - /admin/login
      - /admin/logout
#      - /role/*
#      - /resource/*

aliyun:
  oss:
    endpoint: oss-cn-shenzhen.aliyuncs.com # oss对外服务的访问域名
    accessKeyId: test # 访问身份验证中用到用户标识
    accessKeySecret: test # 用户用于加密签名字符串和oss用来验证签名字符串的密钥
    bucketName: cert-oss # oss的存储空间
    policy:
      expire: 300 # 签名有效期(S)
    maxSize: 10 # 上传文件大小(M)
    callback: http://39.98.190.128:8080/aliyun/oss/callback # 文件上传成功后的回调地址
    dir:
      prefix: cert/images/ # 上传文件夹路径前缀


minio:
  endpoint: http://192.168.3.101:9090 #MinIO服务所在地址
  bucketName: cert #存储桶名称
  accessKey: minioadmin #访问的key
  secretKey: minioadmin #访问的秘钥


logging:
  level:
    root: info #日志配置DEBUG,INFO,WARN,ERROR
    com.aszz.cert: debug

#
#certpath:
#  csr: /root/Client/csr/       #证书请求文件上传路径
#  crt: /root/Client/crt/       #生成证书存放路径
